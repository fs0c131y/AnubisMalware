So, it is two and a half years later and they still haven't fixed it?

So there a two things one has to do it seems.

I re-factored my program into:

int main(void){
    main_rtx();
}
then in RTX_CM_lib.h, I changed line 414 to

extern int main_rtx(void);
That fixed the "address of error"

Then there are four extern "C"declarations one has to do on lines 72-76:

extern "C" OS_TID rt_tsl_self(void);
extern "C" void rt_mut_init(OS_ID mutex);
extern "C" OS_RESULT rt_mut_relase(OS_ID mutex);
extern "C" OS_RESULT rt_mut_wait(OS_ID mutex, int16_t timeout);
as well as on line 215

extern "C" void osTimerThread(void const *argument);
There may be more, but odds are that if you have a linker error about unresolved symbols, it is due to a missing "C" in the extern declarations.

This is hack fix, just for me to test C11 with exceptions on the STM32F746. I would rather put in a

#ifdef __cplusplus
   extern "C" {
#endif

    //external declarations

#ifdef __cplusplus
    } //extern "C"
#endif
around all the external declarations.

NB. int main_rtx(void) must be declared with cpp linkage, i.e. not within an extern "C" group
